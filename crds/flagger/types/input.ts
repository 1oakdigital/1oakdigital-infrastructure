// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import * as utilities from "../utilities";

import {ObjectMeta} from "../meta/v1";

export namespace flagger {
    export namespace v1beta1 {
        /**
         * CanarySpec defines the desired state of a Canary.
         */
        export interface CanarySpecArgs {
            /**
             * Canary analysis for this canary
             */
            analysis: any;
            /**
             * Scaler selector
             */
            autoscalerRef?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecAutoscalerrefArgs>;
            /**
             * Ingress selector
             */
            ingressRef?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecIngressrefArgs>;
            /**
             * Prometheus URL
             */
            metricsServer?: pulumi.Input<string>;
            /**
             * Deployment progress deadline
             */
            progressDeadlineSeconds?: pulumi.Input<number>;
            /**
             * Traffic managent provider
             */
            provider?: pulumi.Input<string>;
            /**
             * Revert mutated resources to original spec on deletion
             */
            revertOnDeletion?: pulumi.Input<boolean>;
            /**
             * Kubernetes Service spec
             */
            service: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceArgs>;
            /**
             * Skip analysis and promote canary
             */
            skipAnalysis?: pulumi.Input<boolean>;
            /**
             * Target selector
             */
            targetRef: pulumi.Input<inputs.flagger.v1beta1.CanarySpecTargetrefArgs>;
            /**
             * Gloo Upstream selector
             */
            upstreamRef?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecUpstreamrefArgs>;
        }

        /**
         * Scaler selector
         */
        export interface CanarySpecAutoscalerrefArgs {
            apiVersion: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
            primaryScalerQueries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * Ingress selector
         */
        export interface CanarySpecIngressrefArgs {
            apiVersion: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        /**
         * Kubernetes Service spec
         */
        export interface CanarySpecServiceArgs {
            /**
             * Metadata to add to the apex service
             */
            apex?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceApexArgs>;
            /**
             * Application protocol of the port
             */
            appProtocol?: pulumi.Input<string>;
            /**
             * AppMesh backend array
             */
            backends?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Metadata to add to the canary service
             */
            canary?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceCanaryArgs>;
            /**
             * Istio Cross-Origin Resource Sharing policy (CORS)
             */
            corsPolicy?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceCorspolicyArgs>;
            /**
             * enable behaving as a delegate VirtualService
             */
            delegation?: pulumi.Input<boolean>;
            /**
             * The list of parent Gateways for a HTTPRoute
             */
            gatewayRefs?: pulumi.Input<pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceGatewayrefsArgs>[]>;
            /**
             * The list of Istio gateway for this virtual service
             */
            gateways?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Headers operations
             */
            headers?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceHeadersArgs>;
            /**
             * The list of host names for this service
             */
            hosts?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * URI match conditions
             */
            match?: pulumi.Input<pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceMatchArgs>[]>;
            /**
             * AppMesh mesh name
             */
            meshName?: pulumi.Input<string>;
            /**
             * Kubernetes service name
             */
            name?: pulumi.Input<string>;
            /**
             * Container port number
             */
            port: pulumi.Input<number>;
            /**
             * Enable port dicovery
             */
            portDiscovery?: pulumi.Input<boolean>;
            /**
             * Container port name
             */
            portName?: pulumi.Input<string>;
            /**
             * Metadata to add to the primary service
             */
            primary?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServicePrimaryArgs>;
            /**
             * Retry policy for HTTP requests
             */
            retries?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceRetriesArgs>;
            /**
             * Rewrite HTTP URIs
             */
            rewrite?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceRewriteArgs>;
            /**
             * Container target port name
             */
            targetPort?: pulumi.Input<number | string>;
            /**
             * HTTP or gRPC request timeout
             */
            timeout?: pulumi.Input<string>;
            /**
             * Istio traffic policy
             */
            trafficPolicy?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceTrafficpolicyArgs>;
        }

        /**
         * Metadata to add to the apex service
         */
        export interface CanarySpecServiceApexArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * Metadata to add to the canary service
         */
        export interface CanarySpecServiceCanaryArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * Istio Cross-Origin Resource Sharing policy (CORS)
         */
        export interface CanarySpecServiceCorspolicyArgs {
            allowCredentials?: pulumi.Input<boolean>;
            allowHeaders?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * List of HTTP methods allowed to access the resource
             */
            allowMethods?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The list of origins that are allowed to perform CORS requests.
             */
            allowOrigin?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * String patterns that match allowed origins
             */
            allowOrigins?: pulumi.Input<any[]>;
            exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
            maxAge?: pulumi.Input<string>;
        }

        export interface CanarySpecServiceGatewayrefsArgs {
            group?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
            sectionName?: pulumi.Input<string>;
        }
        /**
         * canarySpecServiceGatewayrefsArgsProvideDefaults sets the appropriate defaults for CanarySpecServiceGatewayrefsArgs
         */
        export function canarySpecServiceGatewayrefsArgsProvideDefaults(val: CanarySpecServiceGatewayrefsArgs): CanarySpecServiceGatewayrefsArgs {
            return {
                ...val,
                group: (val.group) ?? "gateway.networking.k8s.io",
                kind: (val.kind) ?? "Gateway",
            };
        }

        /**
         * Headers operations
         */
        export interface CanarySpecServiceHeadersArgs {
            request?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceHeadersRequestArgs>;
            response?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceHeadersResponseArgs>;
        }

        export interface CanarySpecServiceHeadersRequestArgs {
            add?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            remove?: pulumi.Input<pulumi.Input<string>[]>;
            set?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface CanarySpecServiceHeadersResponseArgs {
            add?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            remove?: pulumi.Input<pulumi.Input<string>[]>;
            set?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface CanarySpecServiceMatchArgs {
            authority?: any;
            /**
             * Names of gateways where the rule should be applied.
             */
            gateways?: pulumi.Input<pulumi.Input<string>[]>;
            headers?: pulumi.Input<{[key: string]: any}>;
            /**
             * Flag to specify whether the URI matching should be case-insensitive.
             */
            ignoreUriCase?: pulumi.Input<boolean>;
            method?: any;
            /**
             * The name assigned to a match.
             */
            name?: pulumi.Input<string>;
            /**
             * Specifies the ports on the host that is being addressed.
             */
            port?: pulumi.Input<number>;
            /**
             * Query parameters for matching.
             */
            queryParams?: pulumi.Input<{[key: string]: any}>;
            scheme?: any;
            sourceLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Source namespace constraining the applicability of a rule to workloads in that namespace.
             */
            sourceNamespace?: pulumi.Input<string>;
            uri?: any;
            /**
             * withoutHeader has the same syntax with the header, but has opposite meaning.
             */
            withoutHeaders?: pulumi.Input<{[key: string]: any}>;
        }

        /**
         * Metadata to add to the primary service
         */
        export interface CanarySpecServicePrimaryArgs {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        /**
         * Retry policy for HTTP requests
         */
        export interface CanarySpecServiceRetriesArgs {
            /**
             * Number of retries for a given request
             */
            attempts?: pulumi.Input<number>;
            /**
             * Timeout per retry attempt for a given request
             */
            perTryTimeout?: pulumi.Input<string>;
            /**
             * Specifies the conditions under which retry takes place
             */
            retryOn?: pulumi.Input<string>;
        }

        /**
         * Rewrite HTTP URIs
         */
        export interface CanarySpecServiceRewriteArgs {
            uri?: pulumi.Input<string>;
        }

        /**
         * Istio traffic policy
         */
        export interface CanarySpecServiceTrafficpolicyArgs {
            connectionPool?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceTrafficpolicyConnectionpoolArgs>;
            /**
             * Settings controlling the load balancer algorithms.
             */
            loadBalancer?: any;
            /**
             * Settings controlling eviction of unhealthy hosts from the load balancing pool.
             */
            outlierDetection?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceTrafficpolicyOutlierdetectionArgs>;
            /**
             * Istio TLS related settings for connections to the upstream service
             */
            tls?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceTrafficpolicyTlsArgs>;
        }

        export interface CanarySpecServiceTrafficpolicyConnectionpoolArgs {
            /**
             * HTTP connection pool settings.
             */
            http?: pulumi.Input<inputs.flagger.v1beta1.CanarySpecServiceTrafficpolicyConnectionpoolHttpArgs>;
        }

        /**
         * HTTP connection pool settings.
         */
        export interface CanarySpecServiceTrafficpolicyConnectionpoolHttpArgs {
            /**
             * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
             */
            h2UpgradePolicy?: pulumi.Input<string>;
            /**
             * Maximum number of pending HTTP requests to a destination.
             */
            http1MaxPendingRequests?: pulumi.Input<number>;
            /**
             * Maximum number of requests to a backend.
             */
            http2MaxRequests?: pulumi.Input<number>;
            /**
             * The idle timeout for upstream connection pool connections.
             */
            idleTimeout?: pulumi.Input<string>;
            /**
             * Maximum number of requests per connection to a backend.
             */
            maxRequestsPerConnection?: pulumi.Input<number>;
            maxRetries?: pulumi.Input<number>;
        }

        /**
         * Settings controlling eviction of unhealthy hosts from the load balancing pool.
         */
        export interface CanarySpecServiceTrafficpolicyOutlierdetectionArgs {
            /**
             * Minimum ejection duration.
             */
            baseEjectionTime?: pulumi.Input<string>;
            /**
             * Number of 5xx errors before a host is ejected from the connection pool.
             */
            consecutive5xxErrors?: pulumi.Input<number>;
            consecutiveErrors?: pulumi.Input<number>;
            /**
             * Number of gateway errors before a host is ejected from the connection pool.
             */
            consecutiveGatewayErrors?: pulumi.Input<number>;
            /**
             * Time interval between ejection sweep analysis.
             */
            interval?: pulumi.Input<string>;
            maxEjectionPercent?: pulumi.Input<number>;
            minHealthPercent?: pulumi.Input<number>;
        }

        /**
         * Istio TLS related settings for connections to the upstream service
         */
        export interface CanarySpecServiceTrafficpolicyTlsArgs {
            caCertificates?: pulumi.Input<string>;
            /**
             * REQUIRED if mode is `MUTUAL`.
             */
            clientCertificate?: pulumi.Input<string>;
            mode?: pulumi.Input<string>;
            /**
             * REQUIRED if mode is `MUTUAL`.
             */
            privateKey?: pulumi.Input<string>;
            /**
             * SNI string to present to the server during TLS handshake.
             */
            sni?: pulumi.Input<string>;
            subjectAltNames?: pulumi.Input<pulumi.Input<string>[]>;
        }

        /**
         * Target selector
         */
        export interface CanarySpecTargetrefArgs {
            apiVersion: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        /**
         * Gloo Upstream selector
         */
        export interface CanarySpecUpstreamrefArgs {
            apiVersion: pulumi.Input<string>;
            kind: pulumi.Input<string>;
            name: pulumi.Input<string>;
            namespace?: pulumi.Input<string>;
        }

        /**
         * CanaryStatus defines the observed state of a canary.
         */
        export interface CanaryStatusArgs {
            /**
             * Traffic weight routed to canary
             */
            canaryWeight?: pulumi.Input<number>;
            /**
             * Status conditions of this canary
             */
            conditions?: pulumi.Input<pulumi.Input<inputs.flagger.v1beta1.CanaryStatusConditionsArgs>[]>;
            /**
             * Failed check count of the current canary analysis
             */
            failedChecks?: pulumi.Input<number>;
            /**
             * Iteration count of the current canary analysis
             */
            iterations?: pulumi.Input<number>;
            /**
             * LastAppliedSpec of this canary
             */
            lastAppliedSpec?: pulumi.Input<string>;
            /**
             * LastPromotedSpec of this canary
             */
            lastPromotedSpec?: pulumi.Input<string>;
            /**
             * LastTransitionTime of this canary
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * Analysis phase of this canary
             */
            phase?: pulumi.Input<string>;
            /**
             * Session affinity cookie of the previous canary run
             */
            previousSessionAffinityCookie?: pulumi.Input<string>;
            /**
             * Session affinity cookie of the current canary run
             */
            sessionAffinityCookie?: pulumi.Input<string>;
            /**
             * TrackedConfig of this canary
             */
            trackedConfigs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface CanaryStatusConditionsArgs {
            /**
             * LastTransitionTime of this condition
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * LastUpdateTime of this condition
             */
            lastUpdateTime?: pulumi.Input<string>;
            /**
             * Message associated with this condition
             */
            message?: pulumi.Input<string>;
            /**
             * Reason for the current status of this condition
             */
            reason: pulumi.Input<string>;
            /**
             * Status of this condition
             */
            status: pulumi.Input<string>;
            /**
             * Type of this condition
             */
            type: pulumi.Input<string>;
        }

        /**
         * MetricTemplateSpec defines the desired state of a MetricTemplate.
         */
        export interface MetricTemplateSpecArgs {
            /**
             * Provider of this metric template
             */
            provider: pulumi.Input<inputs.flagger.v1beta1.MetricTemplateSpecProviderArgs>;
            /**
             * Query of this metric template
             */
            query: pulumi.Input<string>;
        }

        /**
         * Provider of this metric template
         */
        export interface MetricTemplateSpecProviderArgs {
            /**
             * API address of this provider
             */
            address?: pulumi.Input<string>;
            /**
             * Disable SSL certificate validation for the provider address
             */
            insecureSkipVerify?: pulumi.Input<boolean>;
            /**
             * Region of the provider
             */
            region?: pulumi.Input<string>;
            /**
             * Kubernetes secret reference containing the provider credentials
             */
            secretRef?: pulumi.Input<inputs.flagger.v1beta1.MetricTemplateSpecProviderSecretrefArgs>;
            /**
             * Type of this provider
             */
            type: pulumi.Input<string>;
        }

        /**
         * Kubernetes secret reference containing the provider credentials
         */
        export interface MetricTemplateSpecProviderSecretrefArgs {
            /**
             * Name of the Kubernetes secret
             */
            name: pulumi.Input<string>;
        }
    }
}
